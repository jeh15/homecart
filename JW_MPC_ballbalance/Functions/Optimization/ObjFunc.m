function [] = ObjFunc(Q,R,x,u,dv)
%% Objective Function Forumlation
% Create Symbolic vars for desired states
x_d = sym('x_d',[size(x,1),1]);

% Find the error (x_d is a vector, x is a matrix)
x_e = x_d - x;


% Q = eye(3);
% R = eye(3);

% size(Q)

% We need to grab the diagonal
J_inside = x_e.'*Q*x_e + u.'*R*u;
J = eye(size(J_inside)).*J_inside;
J = sum(J,'all');
% J = sum(J,'all') + s*s.';

% Find the Matrix components  
H = double(hessian(J,dv));
f_obj = jacobian(J,dv);
f = subs(f_obj,dv,zeros(size(dv)));

% Create a Function to take in desired states
disp('Generating Objective Function...')
matlabFunction(H,f,'File','/home/orl/repository/homecart/JW_MPC_ballbalance/Functions/AutoGenerated/ObjectiveFunction','Vars',{x_d},'Outputs',{'H','f'});
end